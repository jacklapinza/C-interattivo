name: Build and Release Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set Git user info and repository permissions for pushing tags
      - name: Set Git user info and repository permissions
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config core.sharedRepository group
          sudo chown -R $(whoami) .git
          sudo chmod -R g+rwX .git
          sudo find .git -type d -exec chmod g+s '{}' +

      # Step 3: Build package in Docker using Arch Linux image
      - name: Build package in Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/pkg" archlinux:base-devel bash -c "
            useradd -m builder &&
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            pacman -Syu --noconfirm git base-devel &&
            echo 'PACKAGER=\"Builder <builder@example.com>\"' >> /etc/makepkg.conf &&
            echo 'GPGKEY=' >> /etc/makepkg.conf &&
            sed -i 's/^SIGNPKG.*/SIGNPKG=no/' /etc/makepkg.conf &&
            chown -R builder:builder /pkg &&
            su builder -c 'cd /pkg && makepkg --noconfirm --skipinteg --nosign'
          "

      # Step 4: Upload built package artifact
      - name: Upload built package
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: ./*.pkg.tar.zst

      # Step 5: Create Git tag
      - name: Create Git tag
        run: |
          git tag -a "v1.0.${{ github.run_number }}" -m "Release v1.0.${{ github.run_number }}"
          git push origin "v1.0.${{ github.run_number }}"

      # Step 6: Create GitHub release and upload package to the release
      - name: Create GitHub release and upload package
        uses: softprops/action-gh-release@v1
        with:
          files: ./*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

